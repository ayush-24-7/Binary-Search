class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        
        vector<int> result;
        int firstindex= firstposition(nums,target);
        int lastindex=  lastposition(nums,target);
        result.push_back(firstindex);
        result.push_back(lastindex);
        return result;
    }


        int firstposition(vector<int>&nums, int target){
        int start=0;
        int end=nums.size()-1;
        int mid = start+ (end-start)/2;
        int ans = -1;

        while(start<=end){
          if(nums[mid]==target){
            ans=mid;
            
            end=mid-1;
          }
          else if(target<nums[mid]){
            end=mid-1;
          }
          else if(target>nums[mid]){
            start=mid+1;
          }
          mid = start+ (end-start)/2;
        }
        return ans;
        }
        
  
      int lastposition(vector<int>&nums, int target) {
        
        int start=0;
        int end=nums.size()-1;
        int mid = start+ (end-start)/2;
        int ans = -1;
        int ans2 = -1;
        while(start<=end){
          if(nums[mid]==target){
            ans=mid;
            start=mid+1;
            }
          else if(target<nums[mid]){
            end=mid-1;
          }
          else if(target>nums[mid]){
            start=mid+1;
          }
          mid = start+ (end-start)/2;
        }
        return ans;
    }
};
